[supervisord]
nodaemon = true
logfile = /www/tmp/supervisord.log
logfile_maxbytes = 10MB
logfile_backups = 2
loglevel = info
directory = /www/tmp/
pidfile = /www/tmp/supervisord.pid
childlogdir=/www/tmp/         ; where child log files will live
user = root                   ; default user
minfds = 1024                 ; number of startup file descriptors
minprocs = 200                ; number of process descriptors

[program:nginx]
command = nginx -g "daemon off;"
user = root
autostart = true
autorestart = true
stderr_logfile = /www/tmp/nginx.err.log
stdout_logfile = /www/tmp/nginx.out.log

[program:uwsgi]
command=uwsgi --ini /www/app/uwsgi.ini
user = web_user
autostart = true
autorestart = true
stdout_logfile = /www/tmp/uwsgi.err.log
stderr_logfile = /www/tmp/uwsgi.out.log
stopsignal = QUIT

[program:redis]
command = redis-server /www/app/redis.conf
user = web_user
autostart = true
autorestart = true
stderr_logfile = /www/tmp/redis.err.log
stdout_logfile = /www/tmp/redis.out.log

[program:celery]
command = celery -A app worker --loglevel=INFO --pidfile=/www/tmp/celery.pid --logfile=/www/tmp/celery.log
directory = /www/app
user = web_user
numprocs = 1
startsecs = 10
autostart = true
autorestart = true
stderr_logfile = /www/tmp/celery.err.log
stdout_logfile = /www/tmp/celery.out.log
stopwaitsecs = 60
killasgroup = true
; Set Celery priority higher than default (999)
; so, if rabbitmq is supervised, it will start first.
priority = 1000

[program:celerycam]
command = python3 manage.py celerycam --frequency=10.0 --pidfile=/www/tmp/celerycam.pid --logfile=/www/tmp/celerycam.log
directory = /www/app
user = web_user
autostart = true
autorestart = true
stdout_logfile = /www/tmp/celerycam.err.log
stderr_logfile = /www/tmp/celerycam.out.log
